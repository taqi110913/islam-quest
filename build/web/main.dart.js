// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const scaffold = flutter_sdk.src__material__scaffold;
  const basic = flutter_sdk.src__widgets__basic;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const flex = flutter_sdk.src__rendering__flex;
  const text = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page = flutter_sdk.src__material__page;
  const icon_button = flutter_sdk.src__material__icon_button;
  const icon = flutter_sdk.src__widgets__icon;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const app_bar = flutter_sdk.src__material__app_bar;
  const scroll_view = flutter_sdk.src__widgets__scroll_view;
  const list_tile = flutter_sdk.src__material__list_tile;
  const animation_controller = flutter_sdk.src__animation__animation_controller;
  const tween = flutter_sdk.src__animation__tween;
  const curves = flutter_sdk.src__animation__curves;
  const transitions = flutter_sdk.src__widgets__transitions;
  const ticker_provider = flutter_sdk.src__widgets__ticker_provider;
  const animation = flutter_sdk.src__animation__animation;
  const alignment = flutter_sdk.src__painting__alignment;
  const binding = flutter_sdk.src__widgets__binding;
  var $46zapp_entry = Object.create(dart.library);
  var main = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var $toString = dartx.toString;
  var $toInt = dartx.toInt;
  var $_get = dartx._get;
  var $length = dartx.length;
  var $addAll = dartx.addAll;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T = {
    VoidTovoid: () => (T.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T.ListOfString()])))(),
    JSArrayOfString: () => (T.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    BuildContextToLevelsPage: () => (T.BuildContextToLevelsPage = dart.constFn(dart.fnType(main.LevelsPage, [framework.BuildContext])))(),
    BuildContextToQuranLearningPage: () => (T.BuildContextToQuranLearningPage = dart.constFn(dart.fnType(main.QuranLearningPage, [framework.BuildContext])))(),
    JSArrayOfWidget: () => (T.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    ObjectN: () => (T.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    BuildContextToPillarsQuizPage: () => (T.BuildContextToPillarsQuizPage = dart.constFn(dart.fnType(main.PillarsQuizPage, [framework.BuildContext])))(),
    IdentityMapOfString$dynamic: () => (T.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    MapOfString$dynamic: () => (T.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    JSArrayOfMapOfString$dynamic: () => (T.JSArrayOfMapOfString$dynamic = dart.constFn(_interceptors.JSArray$(T.MapOfString$dynamic())))(),
    TweenOfdouble: () => (T.TweenOfdouble = dart.constFn(tween.Tween$(core.double)))(),
    BuildContextToResultPage: () => (T.BuildContextToResultPage = dart.constFn(dart.fnType(main.ResultPage, [framework.BuildContext])))(),
    StringN: () => (T.StringN = dart.constFn(dart.nullable(core.String)))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(main.main, T.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: main.HomePage.prototype,
        [Widget_key]: null
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 60,
        [EdgeInsets_left]: 16
      });
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 20,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C3() {
      return C[3] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[4] || CT.C4,
        [Text_textSpan]: null,
        [Text_data]: "👤 Assalamu alaikum!"
      });
    },
    get C5() {
      return C[5] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 20,
        [SizedBox_width]: null
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 10,
        [SizedBox_width]: null
      });
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: main.LevelsPage.prototype,
        [Widget_key]: null
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "📚 Start Learning"
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: main.QuranLearningPage.prototype,
        [Widget_key]: null
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "📖 Learn the Quran"
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58332
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[13] || CT.C13
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Curriculum"
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: null,
        [IconData_fontFamily]: "MaterialIcons",
        [IconData_codePoint]: 58136
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: icon.Icon.prototype,
        [Widget_key]: null,
        [Icon_textDirection]: null,
        [Icon_semanticLabel]: null,
        [Icon_shadows]: null,
        [Icon_color]: null,
        [Icon_opticalSize]: null,
        [Icon_grade]: null,
        [Icon_weight]: null,
        [Icon_fill]: null,
        [Icon_size]: null,
        [Icon_icon]: C[16] || CT.C16
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "🌺 Pillars of Islam"
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: main.PillarsQuizPage.prototype,
        [Widget_key]: null
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "🫼‍♂️ How to Pray"
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: list_tile.ListTile.prototype,
        [Widget_key]: null,
        [ListTile_minLeadingWidth]: null,
        [ListTile_minVerticalPadding]: null,
        [ListTile_horizontalTitleGap]: null,
        [ListTile_enableFeedback]: null,
        [ListTile_selectedTileColor]: null,
        [ListTile_tileColor]: null,
        [ListTile_autofocus]: false,
        [ListTile_focusNode]: null,
        [ListTile_splashColor]: null,
        [ListTile_hoverColor]: null,
        [ListTile_focusColor]: null,
        [ListTile_selected]: false,
        [ListTile_mouseCursor]: null,
        [ListTile_onFocusChange]: null,
        [ListTile_onLongPress]: null,
        [ListTile_onTap]: null,
        [ListTile_enabled]: true,
        [ListTile_contentPadding]: null,
        [ListTile_style]: null,
        [ListTile_textColor]: null,
        [ListTile_iconColor]: null,
        [ListTile_selectedColor]: null,
        [ListTile_shape]: null,
        [ListTile_visualDensity]: null,
        [ListTile_dense]: null,
        [ListTile_isThreeLine]: false,
        [ListTile_trailing]: null,
        [ListTile_subtitle]: null,
        [ListTile_title]: C[21] || CT.C21,
        [ListTile_leading]: null
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "🫄 Wudhu and Cleanliness"
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: list_tile.ListTile.prototype,
        [Widget_key]: null,
        [ListTile_minLeadingWidth]: null,
        [ListTile_minVerticalPadding]: null,
        [ListTile_horizontalTitleGap]: null,
        [ListTile_enableFeedback]: null,
        [ListTile_selectedTileColor]: null,
        [ListTile_tileColor]: null,
        [ListTile_autofocus]: false,
        [ListTile_focusNode]: null,
        [ListTile_splashColor]: null,
        [ListTile_hoverColor]: null,
        [ListTile_focusColor]: null,
        [ListTile_selected]: false,
        [ListTile_mouseCursor]: null,
        [ListTile_onFocusChange]: null,
        [ListTile_onLongPress]: null,
        [ListTile_onTap]: null,
        [ListTile_enabled]: true,
        [ListTile_contentPadding]: null,
        [ListTile_style]: null,
        [ListTile_textColor]: null,
        [ListTile_iconColor]: null,
        [ListTile_selectedColor]: null,
        [ListTile_shape]: null,
        [ListTile_visualDensity]: null,
        [ListTile_dense]: null,
        [ListTile_isThreeLine]: false,
        [ListTile_trailing]: null,
        [ListTile_subtitle]: null,
        [ListTile_title]: C[23] || CT.C23,
        [ListTile_leading]: null
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 500000
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Next"
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Quiz Results"
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 80,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[28] || CT.C28,
        [Text_textSpan]: null,
        [Text_data]: "✅"
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: null,
        [TextStyle_inherit]: true
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 30,
        [SizedBox_width]: null
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Return to Learning"
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Learn the Quran"
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: text.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Coming Soon!"
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[34] || CT.C34,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[35] || CT.C35
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: main.IslamicApp.prototype,
        [Widget_key]: null
      });
    }
  }, false);
  var C = Array(37).fill(void 0);
  var I = ["file:///zapp/project/lib/main.dart"];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T.ListOfStringTodynamic().as(C[0] || CT.C0)(T.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T.dynamicToNull()));
      }
    }, T.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main$() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T.VoidToNull())});
    });
  };
  var Widget_key = dart.privateName(framework, "Widget.key");
  main.IslamicApp = class IslamicApp extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.IslamicApp.new({key: key});
    }
    build(context) {
      return new app.MaterialApp.new({title: "Islam Quest", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.green, fontFamily: "NotoSans"}), home: C[1] || CT.C1});
    }
  };
  (main.IslamicApp.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.IslamicApp.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.IslamicApp.prototype;
  dart.addTypeTests(main.IslamicApp);
  dart.addTypeCaches(main.IslamicApp);
  dart.setMethodSignature(main.IslamicApp, () => ({
    __proto__: dart.getMethods(main.IslamicApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.IslamicApp, I[0]);
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  var Text_selectionColor = dart.privateName(text, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text, "Text.overflow");
  var Text_softWrap = dart.privateName(text, "Text.softWrap");
  var Text_locale = dart.privateName(text, "Text.locale");
  var Text_textDirection = dart.privateName(text, "Text.textDirection");
  var Text_textAlign = dart.privateName(text, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text, "Text.strutStyle");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var Text_style = dart.privateName(text, "Text.style");
  var Text_textSpan = dart.privateName(text, "Text.textSpan");
  var Text_data = dart.privateName(text, "Text.data");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  var Icon_textDirection = dart.privateName(icon, "Icon.textDirection");
  var Icon_semanticLabel = dart.privateName(icon, "Icon.semanticLabel");
  var Icon_shadows = dart.privateName(icon, "Icon.shadows");
  var Icon_color = dart.privateName(icon, "Icon.color");
  var Icon_opticalSize = dart.privateName(icon, "Icon.opticalSize");
  var Icon_grade = dart.privateName(icon, "Icon.grade");
  var Icon_weight = dart.privateName(icon, "Icon.weight");
  var Icon_fill = dart.privateName(icon, "Icon.fill");
  var Icon_size = dart.privateName(icon, "Icon.size");
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  var Icon_icon = dart.privateName(icon, "Icon.icon");
  main.HomePage = class HomePage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.HomePage.new({key: key});
    }
    build(context) {
      let xp = 40;
      let maxXp = 100;
      return new scaffold.Scaffold.new({body: new basic.Stack.new({children: T.JSArrayOfWidget().of([new basic.Padding.new({padding: C[2] || CT.C2, child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T.JSArrayOfWidget().of([C[3] || CT.C3, C[5] || CT.C5, new progress_indicator.LinearProgressIndicator.new({value: xp / maxXp, backgroundColor: colors.Colors.grey._get(300), color: colors.Colors.green, minHeight: 10}), C[6] || CT.C6, new text.Text.new("XP: " + dart.str(xp[$toInt]()) + " / " + dart.str(maxXp[$toInt]()), {style: C[7] || CT.C7}), C[5] || CT.C5, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                          navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[8] || CT.C8, T.BuildContextToLevelsPage())}));
                        }, T.VoidTovoid()), child: C[9] || CT.C9}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                          navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[10] || CT.C10, T.BuildContextToQuranLearningPage())}));
                        }, T.VoidTovoid()), child: C[11] || CT.C11})])})])})}), new basic.Positioned.new({top: 20, left: 10, child: new icon_button.IconButton.new({icon: C[12] || CT.C12, onPressed: dart.fn(() => {
                }, T.VoidTovoid())})})])})});
    }
  };
  (main.HomePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.HomePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.HomePage.prototype;
  dart.addTypeTests(main.HomePage);
  dart.addTypeCaches(main.HomePage);
  dart.setMethodSignature(main.HomePage, () => ({
    __proto__: dart.getMethods(main.HomePage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.HomePage, I[0]);
  var ListTile_minLeadingWidth = dart.privateName(list_tile, "ListTile.minLeadingWidth");
  var ListTile_minVerticalPadding = dart.privateName(list_tile, "ListTile.minVerticalPadding");
  var ListTile_horizontalTitleGap = dart.privateName(list_tile, "ListTile.horizontalTitleGap");
  var ListTile_enableFeedback = dart.privateName(list_tile, "ListTile.enableFeedback");
  var ListTile_selectedTileColor = dart.privateName(list_tile, "ListTile.selectedTileColor");
  var ListTile_tileColor = dart.privateName(list_tile, "ListTile.tileColor");
  var ListTile_autofocus = dart.privateName(list_tile, "ListTile.autofocus");
  var ListTile_focusNode = dart.privateName(list_tile, "ListTile.focusNode");
  var ListTile_splashColor = dart.privateName(list_tile, "ListTile.splashColor");
  var ListTile_hoverColor = dart.privateName(list_tile, "ListTile.hoverColor");
  var ListTile_focusColor = dart.privateName(list_tile, "ListTile.focusColor");
  var ListTile_selected = dart.privateName(list_tile, "ListTile.selected");
  var ListTile_mouseCursor = dart.privateName(list_tile, "ListTile.mouseCursor");
  var ListTile_onFocusChange = dart.privateName(list_tile, "ListTile.onFocusChange");
  var ListTile_onLongPress = dart.privateName(list_tile, "ListTile.onLongPress");
  var ListTile_onTap = dart.privateName(list_tile, "ListTile.onTap");
  var ListTile_enabled = dart.privateName(list_tile, "ListTile.enabled");
  var ListTile_contentPadding = dart.privateName(list_tile, "ListTile.contentPadding");
  var ListTile_style = dart.privateName(list_tile, "ListTile.style");
  var ListTile_textColor = dart.privateName(list_tile, "ListTile.textColor");
  var ListTile_iconColor = dart.privateName(list_tile, "ListTile.iconColor");
  var ListTile_selectedColor = dart.privateName(list_tile, "ListTile.selectedColor");
  var ListTile_shape = dart.privateName(list_tile, "ListTile.shape");
  var ListTile_visualDensity = dart.privateName(list_tile, "ListTile.visualDensity");
  var ListTile_dense = dart.privateName(list_tile, "ListTile.dense");
  var ListTile_isThreeLine = dart.privateName(list_tile, "ListTile.isThreeLine");
  var ListTile_trailing = dart.privateName(list_tile, "ListTile.trailing");
  var ListTile_subtitle = dart.privateName(list_tile, "ListTile.subtitle");
  var ListTile_title = dart.privateName(list_tile, "ListTile.title");
  var ListTile_leading = dart.privateName(list_tile, "ListTile.leading");
  main.LevelsPage = class LevelsPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.LevelsPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[14] || CT.C14, leading: new icon_button.IconButton.new({icon: C[15] || CT.C15, onPressed: dart.fn(() => {
              navigator.Navigator.pop(T.ObjectN(), context);
            }, T.VoidTovoid())})}), body: new scroll_view.ListView.new({padding: C[17] || CT.C17, children: T.JSArrayOfWidget().of([new list_tile.ListTile.new({title: C[18] || CT.C18, onTap: dart.fn(() => {
                navigator.Navigator.push(dart.dynamic, context, new page.MaterialPageRoute.new({builder: dart.fn(context => C[19] || CT.C19, T.BuildContextToPillarsQuizPage())}));
              }, T.VoidTovoid())}), C[20] || CT.C20, C[22] || CT.C22])})});
    }
  };
  (main.LevelsPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.LevelsPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.LevelsPage.prototype;
  dart.addTypeTests(main.LevelsPage);
  dart.addTypeCaches(main.LevelsPage);
  dart.setMethodSignature(main.LevelsPage, () => ({
    __proto__: dart.getMethods(main.LevelsPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.LevelsPage, I[0]);
  main.PillarsQuizPage = class PillarsQuizPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.PillarsQuizPage.new({key: key});
    }
    createState() {
      return new main._PillarsQuizPageState.new();
    }
  };
  (main.PillarsQuizPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.PillarsQuizPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.PillarsQuizPage.prototype;
  dart.addTypeTests(main.PillarsQuizPage);
  dart.addTypeCaches(main.PillarsQuizPage);
  dart.setMethodSignature(main.PillarsQuizPage, () => ({
    __proto__: dart.getMethods(main.PillarsQuizPage.__proto__),
    createState: dart.fnType(framework.State$(main.PillarsQuizPage), [])
  }));
  dart.setLibraryUri(main.PillarsQuizPage, I[0]);
  var _questions = dart.privateName(main, "_questions");
  var _currentIndex = dart.privateName(main, "_currentIndex");
  var _correctCount = dart.privateName(main, "_correctCount");
  var _incorrectCount = dart.privateName(main, "_incorrectCount");
  var _selectedAnswer = dart.privateName(main, "_selectedAnswer");
  var _answered = dart.privateName(main, "_answered");
  var ___PillarsQuizPageState__controller = dart.privateName(main, "_#_PillarsQuizPageState#_controller");
  var ___PillarsQuizPageState__animation = dart.privateName(main, "_#_PillarsQuizPageState#_animation");
  var _controller = dart.privateName(main, "_controller");
  var _animation = dart.privateName(main, "_animation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var _nextQuestion = dart.privateName(main, "_nextQuestion");
  const State_SingleTickerProviderStateMixin$36 = class State_SingleTickerProviderStateMixin extends framework.State$(main.PillarsQuizPage) {};
  (State_SingleTickerProviderStateMixin$36.new = function() {
    ticker_provider.SingleTickerProviderStateMixin$(main.PillarsQuizPage)[dart.mixinNew].call(this);
    State_SingleTickerProviderStateMixin$36.__proto__.new.call(this);
  }).prototype = State_SingleTickerProviderStateMixin$36.prototype;
  dart.applyMixin(State_SingleTickerProviderStateMixin$36, ticker_provider.SingleTickerProviderStateMixin$(main.PillarsQuizPage));
  main._PillarsQuizPageState = class _PillarsQuizPageState extends State_SingleTickerProviderStateMixin$36 {
    get [_controller]() {
      let t0;
      t0 = this[___PillarsQuizPageState__controller];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_controller")) : t0;
    }
    set [_controller](_controller$35param) {
      this[___PillarsQuizPageState__controller] = _controller$35param;
    }
    get [_animation]() {
      let t0;
      t0 = this[___PillarsQuizPageState__animation];
      return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_animation")) : t0;
    }
    set [_animation](_animation$35param) {
      this[___PillarsQuizPageState__animation] = _animation$35param;
    }
    initState() {
      super.initState();
      this[_controller] = new animation_controller.AnimationController.new({vsync: this, duration: C[24] || CT.C24});
      this[_animation] = new (T.TweenOfdouble()).new({begin: 0.8, end: 1.2}).chain(new tween.CurveTween.new({curve: curves.Curves.elasticInOut})).animate(this[_controller]);
    }
    dispose() {
      this[_controller].dispose();
      super.dispose();
    }
    [_nextQuestion]() {
      this.setState(dart.fn(() => {
        if (core.identical(this[_selectedAnswer], this[_questions][$_get](this[_currentIndex])[$_get]("answer"))) {
          this[_correctCount] = this[_correctCount] + 1;
        } else {
          this[_incorrectCount] = this[_incorrectCount] + 1;
        }
        this[_answered] = false;
        this[_selectedAnswer] = null;
        if (this[_currentIndex] < this[_questions][$length] - 1) {
          this[_currentIndex] = this[_currentIndex] + 1;
        } else {
          navigator.Navigator.pushReplacement(dart.dynamic, T.ObjectN(), this.context, new page.MaterialPageRoute.new({builder: dart.fn(context => new main.ResultPage.new({correct: this[_correctCount], incorrect: this[_incorrectCount]}), T.BuildContextToResultPage())}));
        }
      }, T.VoidTovoid()));
    }
    build(context) {
      let progress = (this[_currentIndex] + 1) / this[_questions][$length];
      let question = this[_questions][$_get](this[_currentIndex]);
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[18] || CT.C18}), body: new basic.Padding.new({padding: C[17] || CT.C17, child: new basic.Column.new({children: (() => {
              let t0 = T.JSArrayOfWidget().of([new progress_indicator.LinearProgressIndicator.new({value: progress, color: colors.Colors.green}), C[6] || CT.C6, new text.Text.new("Question " + dart.str(this[_currentIndex] + 1) + " of " + dart.str(this[_questions][$length]), {style: C[7] || CT.C7}), C[5] || CT.C5, new text.Text.new(core.String.as(question[$_get]("question")), {style: C[4] || CT.C4}), C[5] || CT.C5, new basic.Wrap.new({spacing: 10, runSpacing: 10, children: (() => {
                    let t1 = T.JSArrayOfWidget().of([]);
                    for (let option of core.Iterable.as(question[$_get]("options")))
                      t1.push(new elevated_button.ElevatedButton.new({onPressed: this[_answered] ? null : dart.fn(() => {
                          this.setState(dart.fn(() => {
                            this[_selectedAnswer] = T.StringN().as(option);
                            this[_answered] = true;
                            this[_controller].forward({from: 0});
                          }, T.VoidTovoid()));
                        }, T.VoidTovoid()), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: this[_answered] && dart.equals(option, question[$_get]("answer")) ? colors.Colors.green : this[_answered] && dart.equals(option, this[_selectedAnswer]) ? colors.Colors.red : null}), child: new text.Text.new(core.String.as(option))}));
                    return t1;
                  })()}), C[5] || CT.C5]);
              if (this[_answered]) t0[$addAll](T.JSArrayOfWidget().of([new transitions.ScaleTransition.new({scale: this[_animation], child: new text.Text.new(core.identical(this[_selectedAnswer], question[$_get]("answer")) ? "✅ Correct!" : "❌ Wrong!", {style: C[4] || CT.C4})}), C[6] || CT.C6, new text.Text.new(core.String.as(question[$_get]("explanation"))), C[5] || CT.C5, new elevated_button.ElevatedButton.new({onPressed: dart.bind(this, _nextQuestion), child: C[25] || CT.C25})]));
              return t0;
            })()})})});
    }
    static ['_#new#tearOff']() {
      return new main._PillarsQuizPageState.new();
    }
  };
  (main._PillarsQuizPageState.new = function() {
    this[_questions] = T.JSArrayOfMapOfString$dynamic().of([new (T.IdentityMapOfString$dynamic()).from(["question", "What is the first pillar of Islam?", "options", T.JSArrayOfString().of(["Salah", "Shahadah", "Zakat", "Hajj"]), "answer", "Shahadah", "explanation", "Shahadah is the declaration of faith, the first pillar of Islam."]), new (T.IdentityMapOfString$dynamic()).from(["question", "How many times do Muslims pray each day?", "options", T.JSArrayOfString().of(["3", "5", "7", "2"]), "answer", "5", "explanation", "Muslims pray five times a day as the second pillar, Salah."])]);
    this[_currentIndex] = 0;
    this[_correctCount] = 0;
    this[_incorrectCount] = 0;
    this[_selectedAnswer] = null;
    this[_answered] = false;
    this[___PillarsQuizPageState__controller] = null;
    this[___PillarsQuizPageState__animation] = null;
    main._PillarsQuizPageState.__proto__.new.call(this);
    ;
  }).prototype = main._PillarsQuizPageState.prototype;
  dart.addTypeTests(main._PillarsQuizPageState);
  dart.addTypeCaches(main._PillarsQuizPageState);
  dart.setMethodSignature(main._PillarsQuizPageState, () => ({
    __proto__: dart.getMethods(main._PillarsQuizPageState.__proto__),
    [_nextQuestion]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(main._PillarsQuizPageState, () => ({
    __proto__: dart.getGetters(main._PillarsQuizPageState.__proto__),
    [_controller]: animation_controller.AnimationController,
    [_animation]: animation.Animation$(core.double)
  }));
  dart.setSetterSignature(main._PillarsQuizPageState, () => ({
    __proto__: dart.getSetters(main._PillarsQuizPageState.__proto__),
    [_controller]: animation_controller.AnimationController,
    [_animation]: animation.Animation$(core.double)
  }));
  dart.setLibraryUri(main._PillarsQuizPageState, I[0]);
  dart.setFieldSignature(main._PillarsQuizPageState, () => ({
    __proto__: dart.getFields(main._PillarsQuizPageState.__proto__),
    [_questions]: dart.finalFieldType(core.List$(core.Map$(core.String, dart.dynamic))),
    [_currentIndex]: dart.fieldType(core.int),
    [_correctCount]: dart.fieldType(core.int),
    [_incorrectCount]: dart.fieldType(core.int),
    [_selectedAnswer]: dart.fieldType(dart.nullable(core.String)),
    [_answered]: dart.fieldType(core.bool),
    [___PillarsQuizPageState__controller]: dart.fieldType(dart.nullable(animation_controller.AnimationController)),
    [___PillarsQuizPageState__animation]: dart.fieldType(dart.nullable(animation.Animation$(core.double)))
  }));
  var correct$ = dart.privateName(main, "ResultPage.correct");
  var incorrect$ = dart.privateName(main, "ResultPage.incorrect");
  main.ResultPage = class ResultPage extends framework.StatelessWidget {
    get correct() {
      return this[correct$];
    }
    set correct(value) {
      super.correct = value;
    }
    get incorrect() {
      return this[incorrect$];
    }
    set incorrect(value) {
      super.incorrect = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let correct = opts && 'correct' in opts ? opts.correct : null;
      let incorrect = opts && 'incorrect' in opts ? opts.incorrect : null;
      return new main.ResultPage.new({key: key, correct: correct, incorrect: incorrect});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[26] || CT.C26}), body: new basic.Center.new({child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T.JSArrayOfWidget().of([C[27] || CT.C27, C[5] || CT.C5, new text.Text.new("Correct: " + dart.str(this.correct), {style: C[29] || CT.C29}), new text.Text.new("Incorrect: " + dart.str(this.incorrect), {style: C[29] || CT.C29}), C[30] || CT.C30, new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                  navigator.Navigator.pop(T.ObjectN(), context);
                }, T.VoidTovoid()), child: C[31] || CT.C31})])})})});
    }
  };
  (main.ResultPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let correct = opts && 'correct' in opts ? opts.correct : null;
    let incorrect = opts && 'incorrect' in opts ? opts.incorrect : null;
    this[correct$] = correct;
    this[incorrect$] = incorrect;
    main.ResultPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.ResultPage.prototype;
  dart.addTypeTests(main.ResultPage);
  dart.addTypeCaches(main.ResultPage);
  dart.setMethodSignature(main.ResultPage, () => ({
    __proto__: dart.getMethods(main.ResultPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.ResultPage, I[0]);
  dart.setFieldSignature(main.ResultPage, () => ({
    __proto__: dart.getFields(main.ResultPage.__proto__),
    correct: dart.finalFieldType(core.int),
    incorrect: dart.finalFieldType(core.int)
  }));
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  main.QuranLearningPage = class QuranLearningPage extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new main.QuranLearningPage.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[32] || CT.C32}), body: C[33] || CT.C33});
    }
  };
  (main.QuranLearningPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    main.QuranLearningPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = main.QuranLearningPage.prototype;
  dart.addTypeTests(main.QuranLearningPage);
  dart.addTypeCaches(main.QuranLearningPage);
  dart.setMethodSignature(main.QuranLearningPage, () => ({
    __proto__: dart.getMethods(main.QuranLearningPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(main.QuranLearningPage, I[0]);
  main.main = function main$0() {
    binding.runApp(C[36] || CT.C36);
  };
  web_plugin_registrant.registerPlugins = function registerPlugins() {
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/main.dart": main,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/main.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__main: main,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant
  };
}));

//# sourceMappingURL=main.js.map
